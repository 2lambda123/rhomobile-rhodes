<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>
<API>
    <MODULE name="NewORMModel" docNameOverride="Product" parent="Rho">
        <HELP_OVERVIEW>
## THIS IS BETA - Not production ready!

New version of the Rho.ORMModel base class.  This will eventually replace the existing Rho.ORMModel.  We want your feedback so please let us know about your experience with this API on our [Launchpad Discussion Forum](https://developer.motorolasolutions.com/community/rhomobile-suite/rhomobile-community).

RhoMobile applications provide simple CRUD methods for any models that you have defined to interact with the database.  You must define a model class by using the [ORM.addModel](#maddModel) method before you can use the API's referenced here.  See [Orm](Orm) to learn about defining and adding a model.
        </HELP_OVERVIEW>
        <MORE_HELP>
## Enabling the API           
This API is part of the `coreapi` extension that is included automatically.
    :::ruby
    extensions: ["coreapi"]

Next, since this is a beta version of the ORMModel module, to use it you will need to set a flag in `rhoconfig.txt`:

    use_new_orm = 1

## JavaScript Usage
Be sure to review the [JavaScript API Usage](/guide/api_js) guide for important information about using this API in JavaScript.  

### Defining a model

<![CDATA[
    :::javascript
    var Product = Rho.ORM.addModel("Product", function(model) {
      model.enable("fixed_schema");
      model.setModelProperty("name","string");
      model.setModelProperty("brand","string");
      model.setModelProperty("price","float");
    });
]]>

## Ruby Usage
Be sure to review the [Ruby API Usage](/guide/api_ruby) guide for important information about using this API in Ruby

### Defining a model

<![CDATA[
    :::ruby
    class Product
      include Rho::ORM::FixedSchema
      property :name, :string
      property :brand, :string
      property :price, :float
    end
]]>

</MORE_HELP>

        <TEMPLATES>
            <PROPERTY_BAG/>
        </TEMPLATES>

         <PROPERTIES>
            <DESC>List of properties supported by instance of object</DESC>
            <PROPERTY name="loaded" type="BOOLEAN" usePropertyBag="accessorsViaPropertyBag" >
                <DESC>Returns true if a model is loaded in memory.</DESC>
            </PROPERTY>
            <PROPERTY name="model_name" type="STRING" usePropertyBag="accessorsViaPropertyBag" >
                <DESC>The name of the model (i.e. `Product`).</DESC>
            </PROPERTY>
            <PROPERTY name="sync_type" type="STRING" usePropertyBag="accessorsViaPropertyBag" default="none" >
                <DESC>The sync type for a model.</DESC>
            </PROPERTY>
            <PROPERTY name="sync_priority" type="INTEGER" usePropertyBag="accessorsViaPropertyBag" default="1000" >
                <DESC>Returns the model's sync priority. This is the order the model synchronizes relative to other model priorities.</DESC>
            </PROPERTY>
            <PROPERTY name="partition" type="STRING" usePropertyBag="accessorsViaPropertyBag" >
                <DESC>Returns model's database partition.</DESC>
            </PROPERTY>
            <PROPERTY name="source_id" type="INTEGER" usePropertyBag="accessorsViaPropertyBag" >
                <DESC>Returns a unique identifier for the model definition.</DESC>
            </PROPERTY>
            <PROPERTY name="fixed_schema" type="BOOLEAN" usePropertyBag="accessorsViaPropertyBag">
                <DESC>Returns true if the model's type is fixed schema.</DESC>
            </PROPERTY>
            <PROPERTY name="freezed" type="BOOLEAN" usePropertyBag="accessorsViaPropertyBag">
                <DESC>Returns whether the model is freezed. Attempts to modify the model's schema after freezing will raise an exception.</DESC>
            </PROPERTY>
            <PROPERTY name="associations" type="STRING" usePropertyBag="accessorsViaPropertyBag">
                <DESC>Returns the model's sync associations.</DESC>
            </PROPERTY>
        </PROPERTIES>

        <METHODS>

            <METHOD name="enumerate" docNameOverride="Rho.ORMModel.enumerate" access="STATIC">
                <RETURN type="ARRAY">
                    <DESC>The list of ORM models.</DESC>
                    <PARAM type="SELF_INSTANCE"/>
                </RETURN>
            </METHOD>

            <METHOD name="getModel" generateDoc="false"  access="STATIC">
                <PARAMS>
                    <PARAM name="modelName" type="STRING">
                        <DESC>Name of the model you want returned.</DESC>
                    </PARAM>
                </PARAMS>
                <RETURN type="STRING">
                    <DESC>Model class</DESC>
                    <PARAM type="SELF_INSTANCE"/>
                </RETURN>
            </METHOD>

            <METHOD name="init" constructor="true" generateDoc="false">
                <PARAMS>
                    <PARAM name="modelName" type="STRING"/>
                </PARAMS>
            </METHOD>

            <METHOD name="initModel" generateDoc="false">
            </METHOD>

            <METHOD name="setBelongsTo">
                <DESC>Adds 'belongs_to' relationship for the model. Currently this only applies to sync-enabled models.</DESC>
                <PARAMS>
                    <PARAM name="propertyName" type="STRING"/>
                    <PARAM name="sourceName" type="STRING"/>
                </PARAMS>
            </METHOD>

            <METHOD name="getBelongsTo" generateDoc="false">
                <PARAMS>
                    <PARAM name="propertyName" type="STRING"/>
                </PARAMS>
                <RETURN type="ARRAY"/>
            </METHOD>

            <METHOD name="set" scopeOverride="STATIC">
                <DESC>Sets model's property to value with additional processing for `sync` property</DESC>
                <PARAMS>
                    <PARAM name="propertyName" type="STRING">
                        <DESC>The property to set (i.e. "sync")</DESC>
                    </PARAM>
                    <PARAM name="propertyValue" type="STRING">
                        <DESC>The value for the property (i.e. true)</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>

            <METHOD name="enable" scopeOverride="STATIC">
                <DESC>Sets model's Boolean property to true (enables model's property)</DESC>
                <PARAMS>
                    <PARAM name="propertyName" type="STRING">
                        <DESC>The property to enable (i.e. sync)</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>

            <METHOD name="setModelProperty" scopeOverride="STATIC">
                <DESC>Defines database attribute for a model</DESC>
                <PARAMS>
                    <PARAM name="propertyName" type="STRING"/>
                    <PARAM name="propertyType" type="STRING"/>
                    <PARAM name="propOption" type="STRING" default="">
                        <CAN_BE_NIL/>
                    </PARAM>
                </PARAMS>
            </METHOD>

            <METHOD name="getModelProperty" generateDoc="false">
                <DESC>returns info about model's field property</DESC>
                <PARAMS>
                    <PARAM name="propertyName" type="STRING"/>
                </PARAMS>
                <RETURN type="HASH"/>
            </METHOD>

            <METHOD name="setSchemaIndex" scopeOverride="STATIC">
                <DESC>Creates an index on a model's database table (only relevant for FixedSchema models).</DESC>
                <PARAMS>
                    <PARAM name="indexName" type="STRING"/>
                    <PARAM name="indexCols" type="ARRAY"/>
                    <PARAM name="isUnique" type="BOOLEAN"/>
                </PARAMS>
            </METHOD>

            <METHOD name="createObject" docNameOverride="create" scopeOverride="STATIC">
                <DESC>Create a new Rhodes model object and save it to the database. This is the fastest way to insert a single item into the database.</DESC>
                <PARAMS>
                    <PARAM name="attrs" type="HASH">
                        <DESC>List of attributes assigned to the new model object, such as {"name" => "ABC Inc.","address" => "555 5th St."}</DESC>
                    </PARAM>
                </PARAMS>
                <RETURN type="HASH"/>
            </METHOD>

            <METHOD name="createInstance" docNameOverride="make" scopeOverride="STATIC">
                <DESC>Create a new Rhodes model reference but does not persist it to the database. To save this reference to the database, you will need to execute the `save()` method. JS Only.</DESC>
                <PARAMS>
                    <PARAM name="attrs" type="HASH"/>
                </PARAMS>
                <RETURN type="HASH"/>
            </METHOD>

            <METHOD name="destroy" destructor="true" generateDoc="false">
                <DESC>Deletes a model's record from the database</DESC>
            </METHOD>

            <METHOD name="anyChangedObjects" scopeOverride="STATIC">
                <DESC>checks whether the model has any changed objects</DESC>
                <RETURN type="BOOLEAN"/>
            </METHOD>

            <METHOD name="hasChanges" scopeOverride="INSTANCE">
                <DESC>Returns true if the record has any changes that are not synchronized.</DESC>
                <PARAMS>
                    <PARAM name="objId" type="STRING"/>
                </PARAMS>
                <RETURN type="BOOLEAN"/>
            </METHOD>

            <METHOD name="canModify" scopeOverride="INSTANCE">
                <DESC>Returns true if the object is not currently locked by the RhoConnect client for processing.</DESC>
                <PARAMS>
                    <PARAM name="objId" type="STRING">
                        <DESC>ID of the record to check</DESC>
                    </PARAM>
                </PARAMS>
                <RETURN type="BOOLEAN"/>
            </METHOD>

            <METHOD name="updateObject" generateDoc="false">
                <PARAMS>
                    <PARAM name="objId" type="STRING"/>
                    <PARAM name="oldAttrs" type="HASH"/>
                    <PARAM name="newAttrs" type="HASH"/>
                </PARAMS>
                <RETURN type="HASH"/>
            </METHOD>

            <METHOD name="save" generateAPI="false" scopeOverride="INSTANCE">
                <DESC>Saves the current record to the database.</DESC>
            </METHOD>

            <METHOD name="saveObject" generateDoc="false">
                <PARAMS>
                    <PARAM name="objId" type="STRING"/>
                    <PARAM name="attrs" type="HASH"/>
                </PARAMS>
                <RETURN type="HASH"/>
            </METHOD>

            <METHOD name="deleteObject" docNameOverride="destroy" scopeOverride="INSTANCE">
                <PARAMS>
                    <PARAM name="objId" type="STRING"/>
                </PARAMS>
            </METHOD>

            <METHOD name="deleteObjects" generateDoc="false">
                <PARAMS>
                    <PARAM name="findConditions" type="HASH"/>
                    <PARAM name="quests" type="ARRAY"/>
                </PARAMS>
            </METHOD>

            <METHOD name="deleteObjectsPropertyBagByCondHash" generateDoc="false">
                <DESC>Deletes all objects for the given Property Bag model according to the specified conditions</DESC>
                <PARAMS>
                    <PARAM name="conditions" type="HASH"/>
                    <PARAM name="strOptions" type="HASH"/>
                </PARAMS>
                <RETURN type="ARRAY"/>
            </METHOD>

            <METHOD name="deleteObjectsPropertyBagByCondArray" generateDoc="false">
                <DESC>Deletes all objects for the given Property Bag model according to the specified conditions</DESC>
                <PARAMS>
                    <PARAM name="conditions" type="STRING"/>
                    <PARAM name="quests" type="ARRAY"/>
                    <PARAM name="strOptions" type="HASH"/>
                </PARAMS>
                <RETURN type="ARRAY"/>
            </METHOD>

            <METHOD name="getCount" docNameOverride="count" scopeOverride="STATIC">
                <DESC>Returns total number of objects for the model</DESC>
                <RETURN type="INTEGER"/>
            </METHOD>

            <METHOD name="getBackendRefreshTime">
                <DESC>Returns time string when the source has been synced</DESC>
                <RETURN type="STRING"/>
            </METHOD>

            <METHOD name="findObjects" docNameOverride="find" scopeOverride="STATIC">
                <DESC>Returns array of objects for the given model queried according to the specified conditions</DESC>
                <PARAMS>
                    <PARAM name="whatParam" type="STRING"/>
                    <PARAM name="strOptions" type="HASH"/>
                    <PARAM name="quests" type="ARRAY"/>
                    <PARAM name="selectAttrs" type="ARRAY"/>
                    <PARAM name="orderAttrs" type="ARRAY"/>
                </PARAMS>
                <RETURN type="ARRAY"/>
            </METHOD>

            <METHOD name="findObjectsPropertyBagByCondHash" generateDoc="false">
                <DESC>Returns array of objects for the given Property Bag model queried according to the specified conditions</DESC>
                <PARAMS>
                    <PARAM name="whatParam" type="STRING"/>
                    <PARAM name="conditions" type="HASH"/>
                    <PARAM name="strOptions" type="HASH"/>
                    <PARAM name="selectAttrs" type="ARRAY"/>
                </PARAMS>
                <RETURN type="ARRAY"/>
            </METHOD>

            <METHOD name="findObjectsPropertyBagByCondArray" generateDoc="false">
                <DESC>Returns array of objects for the given Property Bag model queried according to the specified conditions</DESC>
                <PARAMS>
                    <PARAM name="whatParam" type="STRING"/>
                    <PARAM name="conditions" type="STRING"/>
                    <PARAM name="quests" type="ARRAY"/>
                    <PARAM name="strOptions" type="HASH"/>
                    <PARAM name="selectAttrs" type="ARRAY"/>
                </PARAMS>
                <RETURN type="ARRAY"/>
            </METHOD>

            <METHOD name="find_by_sql" docNameOverride="findBySql" scopeOverride="STATIC">
                <DESC>Returns array of objects for the given model queried according to the specified SQL</DESC>
                <PARAMS>
                    <PARAM name="sqlQuery" type="STRING">
                        <DESC>The SQL query to execute, such as "SELECT * FROM Account". Note this is primarily only used for FixedSchema models.</DESC>
                    </PARAM>
                </PARAMS>
                <RETURN type="ARRAY"/>
            </METHOD>

            <METHOD name="validateFreezedAttribute" generateDoc="false">
                <DESC>Validates object's freezed attribute</DESC>
                <PARAMS>
                    <PARAM name="attrName" type="STRING"/>
                </PARAMS>
                <RETURN type="BOOLEAN"/>
            </METHOD>

            <METHOD name="validateFreezedAttributes" generateDoc="false">
                <DESC>Validates all object's freezed attributes</DESC>
                <PARAMS>
                    <PARAM name="attrHash" type="HASH"/>
                </PARAMS>
                <RETURN type="BOOLEAN"/>
            </METHOD>

            <METHOD name="buildComplexWhereCond" generateDoc="false">
                <DESC>Aux function</DESC>
                <PARAMS>
                    <PARAM name="attrKey" type="STRING"/>
                    <PARAM name="attrValues" type="ARRAY"/>
                    <PARAM name="valOp" type="STRING"/>
                    <PARAM name="valFunc" type="STRING"/>
                </PARAMS>
                <RETURN type="ARRAY"/>
            </METHOD>

            <METHOD name="buildFindLimits" generateDoc="false">
                <DESC>Aux function</DESC>
                <PARAMS>
                    <PARAM name="whatArg" type="STRING"/>
                    <PARAM name="hashArgs" type="HASH"/>
                </PARAMS>
                <RETURN type="HASH"/>
            </METHOD>

            <METHOD name="buildFindOrder" generateDoc="false">
                <PARAMS>
                    <PARAM name="order_attrs" type="ARRAY"/>
                    <PARAM name="order_ops" type="ARRAY"/>
                </PARAMS>
                <RETURN type="HASH"/>
            </METHOD>

            <METHOD name="buildSimpleWhereCond" generateDoc="false">
                <PARAMS>
                    <PARAM name="what" type="STRING"/>
                    <PARAM name="conditions" type="ARRAY"/>
                </PARAMS>
                <RETURN type="ARRAY"/>
            </METHOD>

            <METHOD name="clear" access="STATIC" generateDoc="false">
            </METHOD>

            
            <METHOD name="onSyncDeleteError">
                <DESC>Handles sync delete errors for the object</DESC>
                <PARAMS>
                    <PARAM name="objId" type="STRING"/>
                    <PARAM name="attrHash" type="HASH"/>
                    <PARAM name="action" type="STRING"/>
                </PARAMS>
            </METHOD>

            <METHOD name="onSyncUpdateError">
                <DESC>Handles sync update errors for the object</DESC>
                <PARAMS>
                    <PARAM name="objId" type="STRING"/>
                    <PARAM name="attrHash" type="HASH"/>
                    <PARAM name="rollbackHash" type="HASH"/>
                    <PARAM name="action" type="STRING"/>
                </PARAMS>
            </METHOD>

            <METHOD name="onSyncCreateError">
                <DESC>Handles sync create errors</DESC>
                <PARAMS>
                    <PARAM name="objects" type="ARRAY"/>
                    <PARAM name="action" type="STRING"/>
                </PARAMS>
            </METHOD>

            <METHOD name="paginate" scopeOverride="STATIC" generateAPI="false">
                <DESC>Call `find` with a limit on the number of records. Default page size is 10.</DESC>
                <PARAMS>
                    <PARAM name="page" type="INTEGER">
                        <DESC>Which page to return</DESC>
                    </PARAM>
                    <PARAM name="per_page" type="INTEGER">
                        <DESC>Number of records per page to return</DESC>
                    </PARAM>
                    <PARAM name="options" type="HASH">
                        <DESC>Same as `find` options argument</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>

            <METHOD name="pushChanges">
                <DESC>Pushes all changes for the sync-enabled model.</DESC>
            </METHOD>

            <ALIASES>
                <ALIAS new="count" existing="getCount"/>
                <ALIAS new="backend_refresh_time" existing="getBackendRefreshTime"/>
            </ALIASES>

        </METHODS>

        <USER_OVERVIEW>
        </USER_OVERVIEW>

        <VER_INTRODUCED>1.0.0</VER_INTRODUCED>
        <PLATFORM>
         </PLATFORM>
    </MODULE>
</API>
