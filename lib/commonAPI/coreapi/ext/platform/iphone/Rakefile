require 'fileutils'
require 'yaml'


USE_STLPORT = true

puts "CoreAPI extension !"


def check_for_rebuild( result_lib_file, patternlist_file )

  if !File.exist?(result_lib_file)
      return true
  end

  patterns = []
  File.new(patternlist_file,"r").read.each_line do |line|
     if line.size > 0
        patterns << line.tr("\n","")
     end
  end

  list_of_files = []

  fillist = FileList.new
  patterns.each do |p|
     fillist.include(p)
  end

  fillist.each do |fil|
     list_of_files << fil
  end

  if !FileUtils.uptodate?(result_lib_file, list_of_files)
      return true

  end
  return false
end

def is_options_was_changed(options_hash, options_file)
  if !File.exist?(options_file)
     File.open(options_file,"w") {|f| f.write(YAML::dump(options_hash)) }
     return true
  else
     saved_options = YAML.load_file(options_file)
     if saved_options.to_a != options_hash.to_a
        File.open(options_file,"w") {|f| f.write(YAML::dump(options_hash)) }
        return true
     end
  end
  return false
end

namespace "build" do

  task :config do

    $targetdir = ENV['TARGET_TEMP_DIR']
    raise "TARGET_TEMP_DIR is not set" if $targetdir.nil?

    $tempdir = ENV['TEMP_FILES_DIR']
    raise "TEMP_FILES_DIR is not set" if $tempdir.nil?

    $rootdir = ENV['RHO_ROOT']
    raise "RHO_ROOT is not set" if $rootdir.nil?

    $xcodebuild = ENV['XCODEBUILD']	
    raise "XCODEBUILD is not set" if $xcodebuild.nil?
 
    $configuration = ENV['CONFIGURATION']	
    raise "CONFIGURATION is not set" if $configuration.nil?

    $sdk = ENV['SDK_NAME']	
    raise "SDK_NAME is not set" if $sdk.nil?

    $bindir = ENV['PLATFORM_DEVELOPER_BIN_DIR']
    raise "PLATFORM_DEVELOPER_BIN_DIR is not set" if $bindir.nil?
    
    $sdkroot = ENV['SDKROOT']
    raise "SDKROOT is not set" if $sdkroot.nil?

    $arch = ENV['ARCHS']
    raise "ARCHS is not set" if $arch.nil?
    
    $gccbin = $bindir + '/gcc-4.2'
    $arbin = $bindir + '/ar'

  end

  task :all => :config do

    iphone_path = '.'

    simulator = $sdk =~ /iphonesimulator/

    if $configuration == 'Distribution'
       $configuration = 'Release'
    end

    result_lib = iphone_path + '/build/' + $configuration + '-' + ( simulator ? "iphonesimulator" : "iphoneos") + '/libCoreAPI.a'
    target_lib = $targetdir + '/libCoreAPI.a'

    if check_for_rebuild(result_lib, "deplist.txt") || is_options_was_changed({"configuration" => $configuration,"sdk" => $sdk}, "lastbuildoptions.yml")

         rm_rf 'build'
         rm_rf target_lib

         args = ['build', '-target', 'CoreAPI', '-configuration', $configuration, '-sdk', $sdk]

         if simulator
             args << '-arch'
             args << 'i386'
         end

         require   $rootdir + '/lib/build/jake.rb'

         puts Jake.run($xcodebuild,args)
         ret = $?
    else

      puts "skip rebuild because previous builded library is still actual !"
      rm_rf target_lib

    end

    # copy result to $targetdir
    cp result_lib,target_lib

  end


end

task :default => "build:all"
