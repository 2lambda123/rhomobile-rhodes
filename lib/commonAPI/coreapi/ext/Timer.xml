<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>
<API>
    <MODULE name="Timer" parent="Rho" productException="eb">
        <HELP_OVERVIEW>The Timer API is used to create,start , stop and checking existance of timers.</HELP_OVERVIEW>
        <MORE_HELP>
## Enabling the API
This API is part of the `coreapi` extension that is included automatically.
    :::ruby
    extensions: ["coreapi"]
        </MORE_HELP>
        <PLATFORM>WM, CE, Android, WP8, iOS, Win32</PLATFORM>
        <PLATFORM_EB>WM, CE, Android</PLATFORM_EB>
        
        <METHODS>
            <METHOD name="create" access="STATIC">
                <RETURN type="SELF_INSTANCE" />
                <DESC>Create a timers objects.</DESC>
            </METHOD>

            <METHOD name="start" access="INSTANCE" hasCallback="mandatory">
              <PARAMS>
              	<PARAM name="interval" type="INTEGER">
                  <DESC>timer interval in ms</DESC>
                </PARAM>                               
              </PARAMS>
              <CALLBACK type="STRING">
              </CALLBACK>
              <DESC>Start timer with preset interval. Callback fired only one time.</DESC>
            </METHOD>

            <METHOD name="stop" access="INSTANCE">
              <DESC>Stop started timer</DESC>
            </METHOD>

            <METHOD name="isAlive" access="INSTANCE">
              <DESC></DESC>
              <RETURN type="BOOLEAN">
                <DESC>Return alive state of a timer. If callback doesnt fired return true, otherwise return false</DESC>
              </RETURN>
            </METHOD>

        </METHODS>

        <USER_OVERVIEW>
        </USER_OVERVIEW>

        <VER_INTRODUCED>5.1.0</VER_INTRODUCED>
        <PLATFORM>
         </PLATFORM>
           <EXAMPLES>
            <EXAMPLE title="Examples">
                <SECTIONS>
                    <SECTION>
                        <CODE>
                           Implementation of the timer api.
           Create a timer and catch callback after interval:
           
            var timerCallback = function() {
                alert("callback called");
            }                                              

            var timer = Rho.Timer.create();
            timer.start(5000, timerCallback);
            
            Create a timer, start and stop:
            var timerCallback = function() {
                alert("callback called");
            }                                              

            var timer = Rho.Timer.create();
            timer.start(5000, timerCallback);
            setTimeout(function() {
                    timer.stop();
                },3000);
                        </CODE>
                        </SECTION>
                  </SECTIONS>
                   </EXAMPLE>
         </EXAMPLES>
    </MODULE>
</API>
