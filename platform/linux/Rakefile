# Builds rubylinux executable

cc = "gcc"
cflags = "-O2 -g -Wall -Wno-parentheses"
lnk_flags = "-L. -rdynamic -Wl,-export-dynamic"
incl = "-Iinc -I../shared/ruby -I../shared/ruby/linux -I../shared/ruby/include -I../shared -I../shared/ruby/rhoruby"
compile = "#{cc} #{cflags} #{incl} -DRUBY_EXPORT -c "
link = "#{cc} #{lnk_flags}"
target = "target/compiler/rubylinux"
out = "-lsqlite3 -lpthread -lrt -ldl -lcrypt -lm -o #{target}"
src_dir = "../shared/ruby"
code = true
objfiles = []

task :default => :all

desc "Build all ruby sources"
task :all, :continue do |t,args|
  File.open("files.txt").each_line do |file|
    file.chomp!
    o_file = "#{src_dir}/#{file}"
    objfiles << "#{o_file}.o"
    if not FileUtils.uptodate?("#{o_file}.o", "#{o_file}.c")
      cmd = "#{compile} -o #{o_file}.o #{o_file}.c"
      puts cmd
      code = system cmd
    else
      puts "skipping #{o_file}.c"
    end
    abort("Aborting due to compile errors...") if not code and not args.continue
  end
  
  cmd = "#{link} #{objfiles.join(" ")} #{out}"
  puts cmd
  code = system cmd
  abort("Aborting due to compile errors...") if not code
end

desc "Clean all artifacts"
task :clean do
	system("find #{src_dir} -name *.o | xargs rm")
	system("rm #{target}")
end